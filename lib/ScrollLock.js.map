{"version":3,"sources":["../src/ScrollLock.jsx"],"names":["ScrollLock","onScrollHandler","e","elem","scrollingElement","scrollTop","scrollHeight","clientHeight","wheelDelta","deltaY","isDeltaPositive","shouldCancelScroll","cancelScrollEvent","setScrollingElement","r","firstChild","stopImmediatePropagation","preventDefault","props","enabled","addEventListener","nextProps","removeEventListener","children","defaultProps"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,U;;;;;;;;;;;;;;kMAmBFC,e,GAAkB,UAACC,CAAD,EAAO;AACrB,gBAAMC,OAAO,MAAKC,gBAAlB;AADqB,gBAEbC,SAFa,GAE6BF,IAF7B,CAEbE,SAFa;AAAA,gBAEFC,YAFE,GAE6BH,IAF7B,CAEFG,YAFE;AAAA,gBAEYC,YAFZ,GAE6BJ,IAF7B,CAEYI,YAFZ;;AAGrB,gBAAMC,aAAaN,EAAEO,MAArB;AACA,gBAAMC,kBAAkBF,aAAa,CAArC;AACA,gBAAIG,qBAAqB,KAAzB;;AAEA,gBAAID,mBAAmBF,aAAaF,eAAeC,YAAf,GAA8BF,SAAlE,EAA6E;AACzEF,qBAAKE,SAAL,GAAiBC,YAAjB;AACAK,qCAAqB,IAArB;AACH,aAHD,MAGO,IAAI,CAACD,eAAD,IAAoB,CAACF,UAAD,GAAcH,SAAtC,EAAiD;AACpDF,qBAAKE,SAAL,GAAiB,CAAjB;AACAM,qCAAqB,IAArB;AACH;;AAED,gBAAIA,kBAAJ,EAAwB;AACpB,sBAAKC,iBAAL,CAAuBV,CAAvB;AACH;AACJ,S,QAEDW,mB,GAAsB,UAACC,CAAD,EAAO;AACzB,kBAAKV,gBAAL,GAAwBU,IAAIA,EAAEC,UAAN,GAAmBD,CAA3C;AACH,S,QAEDF,iB,GAAoB,UAACV,CAAD,EAAO;AACvBA,cAAEc,wBAAF;AACAd,cAAEe,cAAF;AACA,mBAAO,KAAP;AACH,S;;;;;4CA9CmB;AAChB,gBAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACpB,qBAAKf,gBAAL,CAAsBgB,gBAAtB,CAAuC,OAAvC,EAAgD,KAAKnB,eAArD,EAAsE,KAAtE;AACH;AACJ;;;kDAEyBoB,S,EAAW;AACjC,gBAAIA,UAAUF,OAAd,EAAuB;AACnB,qBAAKf,gBAAL,CAAsBgB,gBAAtB,CAAuC,OAAvC,EAAgD,KAAKnB,eAArD,EAAsE,KAAtE;AACH,aAFD,MAEO;AACH,qBAAKG,gBAAL,CAAsBkB,mBAAtB,CAA0C,OAA1C,EAAmD,KAAKrB,eAAxD,EAAyE,KAAzE;AACH;AACJ;;;+CAEsB;AACnB,iBAAKG,gBAAL,CAAsBkB,mBAAtB,CAA0C,OAA1C,EAAmD,KAAKrB,eAAxD,EAAyE,KAAzE;AACH;;;iCAgCQ;AACL,mBACI;AAAA;AAAA,kBAAK,KAAK,KAAKY,mBAAf;AACK,qBAAKK,KAAL,CAAWK;AADhB,aADJ;AAKH;;;;;;AAGLvB,WAAWwB,YAAX,GAA0B;AACtBL,aAAS;AADa,CAA1B;;kBAIenB,U","file":"ScrollLock.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ScrollLock extends Component {\n    componentDidMount() {\n        if (this.props.enabled) {\n            this.scrollingElement.addEventListener('wheel', this.onScrollHandler, false);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.enabled) {\n            this.scrollingElement.addEventListener('wheel', this.onScrollHandler, false);\n        } else {\n            this.scrollingElement.removeEventListener('wheel', this.onScrollHandler, false);\n        }\n    }\n\n    componentWillUnmount() {\n        this.scrollingElement.removeEventListener('wheel', this.onScrollHandler, false);\n    }\n\n    onScrollHandler = (e) => {\n        const elem = this.scrollingElement;\n        const { scrollTop, scrollHeight, clientHeight } = elem;\n        const wheelDelta = e.deltaY;\n        const isDeltaPositive = wheelDelta > 0;\n        let shouldCancelScroll = false;\n\n        if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {\n            elem.scrollTop = scrollHeight;\n            shouldCancelScroll = true;\n        } else if (!isDeltaPositive && -wheelDelta > scrollTop) {\n            elem.scrollTop = 0;\n            shouldCancelScroll = true;\n        }\n\n        if (shouldCancelScroll) {\n            this.cancelScrollEvent(e);\n        }\n    };\n\n    setScrollingElement = (r) => {\n        this.scrollingElement = r ? r.firstChild : r;\n    };\n\n    cancelScrollEvent = (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        return false;\n    };\n\n    render() {\n        return (\n            <div ref={this.setScrollingElement}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nScrollLock.defaultProps = {\n    enabled: true\n};\n\nexport default ScrollLock;\n"]}