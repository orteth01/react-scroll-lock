{"version":3,"sources":["../src/ScrollLock.jsx"],"names":["onScrollHandler","e","elem","scrollingElement","scrollTop","scrollHeight","clientHeight","wheelDelta","deltaY","isDeltaPositive","cancelScrollEvent","setScrollingElement","ref","firstChild","stopImmediatePropagation","preventDefault","addEventListener","removeEventListener","props","children"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;0LAWIA,e,GAAkB,UAACC,CAAD,EAAO;AACrB,gBAAMC,OAAO,MAAKC,gBAAlB;AADqB,gBAEbC,SAFa,GAE6BF,IAF7B,CAEbE,SAFa;AAAA,gBAEFC,YAFE,GAE6BH,IAF7B,CAEFG,YAFE;AAAA,gBAEYC,YAFZ,GAE6BJ,IAF7B,CAEYI,YAFZ;;AAGrB,gBAAMC,aAAaN,EAAEO,MAArB;AACA,gBAAMC,kBAAkBF,aAAa,CAArC;;AAEA,gBAAIE,mBAAmBF,aAAaF,eAAeC,YAAf,GAA8BF,SAAlE,EAA6E;AACzEF,qBAAKE,SAAL,GAAiBC,YAAjB;AACA,sBAAKK,iBAAL,CAAuBT,CAAvB;AACH,aAHD,MAGO,IAAI,CAACQ,eAAD,IAAoB,CAACF,UAAD,GAAcH,SAAtC,EAAiD;AACpDF,qBAAKE,SAAL,GAAiB,CAAjB;AACA,sBAAKM,iBAAL,CAAuBT,CAAvB;AACH;AACJ,S,QAEDU,mB,GAAsB,UAACC,GAAD,EAAS;AAC3B,kBAAKT,gBAAL,GAAwBS,MAAMA,IAAIC,UAAV,GAAuBD,GAA/C;AACH,S,QAEDF,iB,GAAoB,UAACT,CAAD,EAAO;AACvBA,cAAEa,wBAAF;AACAb,cAAEc,cAAF;AACA,mBAAO,KAAP;AACH,S;;;;;4CA/BmB;AAChB,iBAAKZ,gBAAL,CAAsBa,gBAAtB,CAAuC,OAAvC,EAAgD,KAAKhB,eAArD,EAAsE,KAAtE;AACH;;;+CAEsB;AACnB,iBAAKG,gBAAL,CAAsBc,mBAAtB,CAA0C,OAA1C,EAAmD,KAAKjB,eAAxD,EAAyE,KAAzE;AACH;;;iCA2BQ;AACL,mBACI;AAAA;AAAA,kBAAK,KAAK,KAAKW,mBAAf;AACK,qBAAKO,KAAL,CAAWC;AADhB,aADJ;AAKH","file":"ScrollLock.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class extends Component {\n    componentDidMount() {\n        this.scrollingElement.addEventListener('wheel', this.onScrollHandler, false);\n    }\n\n    componentWillUnmount() {\n        this.scrollingElement.removeEventListener('wheel', this.onScrollHandler, false);\n    }\n\n    onScrollHandler = (e) => {\n        const elem = this.scrollingElement;\n        const { scrollTop, scrollHeight, clientHeight } = elem;\n        const wheelDelta = e.deltaY;\n        const isDeltaPositive = wheelDelta > 0;\n\n        if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {\n            elem.scrollTop = scrollHeight;\n            this.cancelScrollEvent(e);\n        } else if (!isDeltaPositive && -wheelDelta > scrollTop) {\n            elem.scrollTop = 0;\n            this.cancelScrollEvent(e);\n        }\n    };\n\n    setScrollingElement = (ref) => {\n        this.scrollingElement = ref ? ref.firstChild : ref;\n    };\n\n    cancelScrollEvent = (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        return false;\n    };\n\n    render() {\n        return (\n            <div ref={this.setScrollingElement}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n"]}